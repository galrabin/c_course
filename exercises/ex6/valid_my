Tests for computeExponent() function:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
computeExponent(          "000") =   0
computeExponent(          "009") =   0
computeExponent(       "123000") =   5
computeExponent(    "001203000") =   6
computeExponent(          "-12") =  -1
computeExponent(        "12 34") =  -1
computeExponent(             "") =  -1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Tests for fullMantissaLength() function:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fullMantissaLength(          "000") =   1
fullMantissaLength(          "009") =   1
fullMantissaLength(       "123000") =   3
fullMantissaLength(    "001203000") =   4
fullMantissaLength(          "-12") =  -1
fullMantissaLength(        "12 34") =  -1
fullMantissaLength(             "") =  -1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Tests for copyMantissa() function:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Copying different mantissas into a buffer, starting from the 2nd entry.
Initializing buffer conent to: {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("9876543210", buffer+1,  1) returns  0 and updates buffer content to:  {'A', '9', '\0', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("000987654321000", buffer+1,  3) returns  0 and updates buffer content to:  {'A', '9', '8', '7', '\0', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("000987654321000", buffer+1,  5) returns  0 and updates buffer content to:  {'A', '9', '8', '7', '6', '5', '\0', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("000987654321000", buffer+1,  9) returns  1 and updates buffer content to:  {'A', '9', '8', '7', '6', '5', '4', '3', '2', '1', '\0', 'L', 'M', 'N', '\0'}
copyMantissa("000987654321000", buffer+1, 10) returns  1 and updates buffer content to:  {'A', '9', '8', '7', '6', '5', '4', '3', '2', '1', '\0', 'L', 'M', 'N', '\0'}
copyMantissa("000987654321000", buffer+1, 15) returns  1 and updates buffer content to:  {'A', '9', '8', '7', '6', '5', '4', '3', '2', '1', '\0', 'L', 'M', 'N', '\0'}
Reinitializing buffer conent to: {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("00000000000000000000", buffer+1,  3) returns  1 and updates buffer content to:  {'A', '0', '\0', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("000900000001000", buffer+1,  3) returns  0 and updates buffer content to:  {'A', '9', '\0', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
Reinitializing buffer conent to: {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
Testing invalid inputs:
copyMantissa("-12", buffer+1,  1) returns -1 and updates buffer content to:  {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("12 34", buffer+1,  1) returns -1 and updates buffer content to:  {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("0-12", buffer+1,  1) returns -1 and updates buffer content to:  {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("", buffer+1,  1) returns -1 and updates buffer content to:  {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("1234", buffer+1,  0) returns -1 and updates buffer content to:  {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
copyMantissa("1234", buffer+1, -3) returns -1 and updates buffer content to:  {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', '\0'}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Tests for newBigInt() function:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

!!! Important note: the BigInt_st structure takes up 24 bytes on the server!!!

Resetting virtual heap with 0 allocated blocks and maximum capacity of 10000 bytes.
newBigInt("-000987654321000",  1) results in new BigInt object with sign='-', exp=11, mantissa="9". Allocated 26 bytes in  2 blocks in virtual stack.
Resetting virtual heap with 0 allocated blocks and maximum capacity of 10000 bytes.
newBigInt("-000987654321000",  0) results in new BigInt object with sign='-', exp=11, mantissa="987654321". Allocated 34 bytes in  2 blocks in virtual stack.
Resetting virtual heap with 0 allocated blocks and maximum capacity of 10000 bytes.
newBigInt("-000987654321000", -10) results in new BigInt object with sign='-', exp=11, mantissa="987654321". Allocated 34 bytes in  2 blocks in virtual stack.
Resetting virtual heap with 0 allocated blocks and maximum capacity of 10000 bytes.
newBigInt("+000987654321000", 20) results in new BigInt object with sign='+', exp=11, mantissa="987654321". Allocated 34 bytes in  2 blocks in virtual stack.
Resetting virtual heap with 0 allocated blocks and maximum capacity of 10000 bytes.
newBigInt("000900000001000",  3) results in new BigInt object with sign='+', exp=11, mantissa="9". Allocated 28 bytes in  2 blocks in virtual stack. [MORE OPTIMAL IMPLEMENTATIONS ALLOCATE 2 LESS BYTES FOR THE MANTISSA STRING]
Resetting virtual heap with 0 allocated blocks and maximum capacity of 10000 bytes.
newBigInt("-0000000000000",  3) results in new BigInt object with sign='+', exp= 0, mantissa="0". Allocated 26 bytes in  2 blocks in virtual stack.
Resetting virtual heap with 0 allocated blocks and maximum capacity of 3 bytes.
Checking what happens when there is no space in heap
Virtual heap: Allocation tries to exceed max number of bytes - 3
newBigInt("0",  3) results in NULL pointer. Allocated  0 bytes in  0 blocks in virtual stack.
Resetting virtual heap with 0 allocated blocks and maximum capacity of 24 bytes.
Checking what happens when there is space in heap for struct or the mantissa array but not for both
Virtual heap: Allocation tries to exceed max number of bytes - 24
newBigInt("0",  3) results in NULL pointer. Allocated  0 bytes in  0 blocks in virtual stack.
Testing invalid inputs:
Resetting virtual heap with 0 allocated blocks and maximum capacity of 1 bytes.
newBigInt("--0",  3) results in NULL pointer. Allocated  0 bytes in  0 blocks in virtual stack.
Resetting virtual heap with 0 allocated blocks and maximum capacity of 1 bytes.
newBigInt("+1234.",  1) results in NULL pointer. Allocated  0 bytes in  0 blocks in virtual stack.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Tests for freeBigInt() function:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

!!! Important note: the BigInt_st structure takes up 24 bytes on the server!!!

Resetting virtual heap with 0 allocated blocks and maximum capacity of 10000 bytes.
newBigInt("-000987654321000",  1) results in new BigInt object with sign='-', exp=11, mantissa="9". Allocated 26 bytes in  2 blocks in virtual stack.
After freeing the BigInt object there are  0 bytes allocated in  0 blocks in virtual stack.
Resetting virtual heap with 0 allocated blocks and maximum capacity of 10000 bytes.
newBigInt("-000987654321000",  0) results in new BigInt object with sign='-', exp=11, mantissa="987654321". Allocated 34 bytes in  2 blocks in virtual stack.
After freeing the BigInt object there are  0 bytes allocated in  0 blocks in virtual stack.
Resetting virtual heap with 0 allocated blocks and maximum capacity of 10000 bytes.
newBigInt("-000987654321000", -10) results in new BigInt object with sign='-', exp=11, mantissa="987654321". Allocated 34 bytes in  2 blocks in virtual stack.
After freeing the BigInt object there are  0 bytes allocated in  0 blocks in virtual stack.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Tests for printBigInt() function:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Creating BigInt object from string "0000009876543210" with full mantissa.
printBigInt(bigInt,  1) prints "+9e9"
printBigInt(bigInt,  3) prints "+9.87e9"
printBigInt(bigInt, 12) prints "+9.87654321000e9"
printBigInt(bigInt,  0) prints "+9.87654321e9"
Creating BigInt object from string "-00000300000" with full mantissa.
printBigInt(bigInt,  1) prints "+0e5"
printBigInt(bigInt, 15) prints "+0.00000000000000e5"
printBigInt(bigInt, -15) prints "+0e5"
Creating BigInt object from string "-0000000000" with full mantissa.
printBigInt(bigInt,  3) prints "+0.00e0"
printBigInt(bigInt,  0) prints "+0e0"
Making sure all allocations are clean before leaving: Allocated  0 bytes in  0 blocks in virtual stack.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~